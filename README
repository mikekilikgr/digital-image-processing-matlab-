----------------------------------------ΜΟΝΤΕΛΑ ΧΡΩΜΑΤΩΝ------------------------------------------------------------------------------------

1. Ζητείται να φτιάξετε ένα πρόγραμμα που να ‘διαβάζει’ 8-bit RGB (έγχρωμες)
εικόνες και να τις μετατρέπει σε εικόνες αποχρώσεων του γκρι. Το πρόγραμμα
αυτό αρκεί να αντικαθιστά την παλέτα της εικόνας με μια άλλη αποχρώσεων
του γκρι. Αποθηκεύστε τη νέα εικόνα σε αρχείο.
Η παλέτα αποχρώσεων του γκρι της εικόνας τι μέγεθος έχει και γιατί;
2. Στο HSI μοντέλο χρωμάτων δημιουργήστε 256 χρώματα με τον εξής τρόπο:
Ορίστε k = μονοψήφιος αριθμός που προκύπτει από το άθροισμα των 3 τελευταίων
ψηφίων του κωδικού της ομάδας σας 
Θέτουμε το S=(1-k/10), το I=0.5 και παίρνουμε 256 διαφορετικές τιμές για
το Η (0<=Η<=360).
Στη συνέχεια:
- μετατρέψτε τα χρώματα αυτά (του HSI μοντέλου) στο RGB μοντέλο
χρησιμοποιώντας τους αναλυτικούς τύπους που δίνονται στην εκφώνηση και
- δείξτε την παλέτα που δημιουργήσατε ως μία νέα εικόνα.
Βοήθεια: Για να δείξετε τη νέα παλέτα ως εικόνα, αρκεί να δημιουργήσετε
έναν πίνακα, έστω new_Image, που θα τον ‘γεμίσετε’ κατάλληλα με αριθμούς
ώστε, όταν τον συνδυάσετε με την παλέτα μέσω της imwrite, κάθε γραμμή i
του πίνακα new_Image να δείχνει σto χρώμα i της παλέτας.
Τι συμβολίζουν οι συνιστώσες του HSI χρωματικού μοντέλου; Με ποιον τρόπο
διαφοροποιούνται οπτικά; Περιγράψτε με ποιον τρόπο δημιουργήσατε τον πίνακα
για το Hue και γιατί. Περιγράψτε τον κώδικά σας για την αποθήκευση της
νέας παλέτας που δημιουργήσατε σε εικόνα.
3. Προχωρήστε σε σταδιακό ξεθώριασμά 8-bit εικόνας της επιλογής σας.
Για να το κάνετε αυτό, μετατρέψτε την στο HSI μοντέλο, χρησιμοποιώντας
αυτή τη φορά την έτοιμη εντολή της Matlab (rgb2hsv), απομονώστε το κανάλι
του saturation και πειραματιστείτε μεταβάλλοντας τις τιμές του κατά ένα
συντελεστή που θα μειώνεται κατά 0.2 κάθε φορά (στο διάστημα τιμών 0-1).
Στη συνέχεια, ξαναγράψτε την εικόνα σε rgb (hsv2rgb) κι εμφανίστε κάθε
εικόνα που προκύπτει (imshow). Εξηγείστε το αποτέλεσμα.
6
4. Υλοποιήστε κι εφαρμόστε την τεχνική του white balance σε 8-bit RGB εικόνα
της επιλογής σας. Εξηγήστε το αποτέλεσμα και γιατί ήταν αναμενόμενο
(ανάλογα με το περιεχόμενο της εικόνας που επιλέξατε).

---------------------------------------ΙΣΤΟΓΡΑΜΜΑ-ΦΙΛΤΡΑ----------------------------------------------------------------------
1.Αναζητείστε εικόνα με format της επιλογής σας, η οποία να πάσχει από κακό
contrast.
 Δημιουργήστε ένα script στο οποίο θα διαβάζετε την παραπάνω εικόνα
και, στη συνέχεια, θα παρουσιάζετε το ιστόγραμμα της (imhist).
(Τι είναι το Ιστόγραμμα και πως φαίνεται στο συγκεκριμένο Ιστόγραμμα το κακό
contrast της εικόνας που επιλέξατε;)
 Προχωρήστε στην εξισορρόπηση (ισοστάθμιση) του παραπάνω ιστογράμματος
και εμφανίστε τόσο το νέο ιστόγραμμα όσο και τη βελτιωμένη εικόνα (histeq).
(Τι παρατηρείτε; Τι βελτιώνει στην εικόνα η ισοστάθμιση του ιστογράμματος; Γιατί;)
 Μετατρέψτε την αρχική εικόνα σε ασπρόμαυρη (black & white). Αυτό
μπορείτε να το κάνετε εφαρμόζοντας κάποιο κατώφλι (threshold) της επιλογής
σας (δηλαδή, για τιμές > ή < threshold, αλλάξτε την τιμή αυτή του πίνακα
σε τιμή που αντιστοιχεί σε λευκό ή μαύρο χρώμα). Βάσει του ιστογράμματος
της εικόνας σας, ποια είναι αυτή η κατάλληλη τιμή κατωφλίου ώστε οι τιμές
των pixels να μοιραστούν σχεδόν ομοιόμορφα στις δύο νέες τιμές (black &
white);
2. Για το 2ο μέρος της άσκησης, χρησιμοποιήστε την εικόνα “brain.gif”.
 Ορίστε k1 = μονοψήφιος αριθμός που προκύπτει από το άθροισμα των 3
τελευταίων ψηφίων του κωδικού της ομάδας σας όπως αυτή είναι δηλωμένη στον
Ιστοχώρο.
Παράδειγμα: Έστω ότι ο κωδικός της ομάδας σας είναι: LAB31220294, τότε k
= 2+9+4 = 15  1+5 = 6.
Εάν k1 = 1 ή 2, τότε ορίστε k1 = 3.
(Αναφέρετε μέσα στην αναφορά σας πως προέκυψαν τα k1 και k2 για τη δική
σας περίπτωση).
 Ορίστε:
k2 = k1 + 3, αν k1 = ζυγός αριθμός
k2 = k1 + 2, αν k1 = περιττός αριθμός
 Εφαρμόστε στην αρχική εικόνα 2 median filters, ένα μεγέθους [k1 k1]
και ένα μεγέθους [k2 k2] (medfilt2).
 Εφαρμόστε στην αρχική εικόνα 2 gaussian filters, ένα μεγέθους [k1 k1]
και ένα μεγέθους [k2 k2] (fspecial & imfilter).
 Εμφανίστε την εικόνα μετά την εφαρμογή κάθε φίλτρου – όλες (και τις
4) στο ίδιο γράφημα.


3. Και σε αυτό το 3ο μέρος της άσκησης, συνεχίστε με την εικόνα “brain.gif”
και τα k1 και k2 όπως τα έχετε ορίσει στο 2ο μέρος της άσκησης.
 Εφαρμόστε στην αρχική εικόνα θόρυβο “salt & pepper”, διασποράς της
επιλογής σας (imnoise).
(Τι είδος θορύβου είναι αυτός; Ποιες περιπτώσεις μπορεί να προσομοιώσει;)
 Προσπαθήστε να μειώσετε την επίδραση του θορύβου χρησιμοποιώντας στην
εικόνα με θόρυβο τα εξής φίλτρα: median μεγέθους [k1 k1], median μεγέθους
[k2 k2], average μεγέθους [k1 k1] και average μεγέθους [k2 k2] (fspecial
& imfilter).
 Εμφανίστε την εικόνα μετά την εφαρμογή κάθε φίλτρου – όλες (και τις
4) στο ίδιο γράφημα.
 Τι παρατηρείτε; Ποια κατηγορία φίλτρων τα ‘κατάφερε’ καλύτερα στη
μείωση του θορύβου; Γιατί;
Για να αιτιολογήσετε την απάντησή σας, υπολογίστε το Μέσο Τετραγωνικό
Σφάλμα του κάθε αποτελέσματος σε σχέση με την αρχική εικόνα με θόρυβο.


Στο 4ο μέρος της άσκησης, θα ασχοληθείτε με εικόνες περιβαλλοντικού
ενδιαφέροντος και θα δείτε τρόπους βασικής τους επεξεργασίας προκειμένου
να εξάγετε μία πρώτη μορφή παρατήρησης σχετικά με το περιεχόμενό τους. Πιο
συγκεκριμένα, το αντικείμενο ενασχόλησης εδώ είναι η ροή νερού σε ποταμούς
και η παρατήρηση για το εάν στην επιφάνεια της ροής επιπλέουν φερτά υλικά
(particles). Τέτοιου είδους υλικά συνήθως είναι φύλλα, κομμάτια ξύλου ακόμη
και οι σχηματισμοί αφρού του νερού. Ο εντοπισμός των floating particles
μπορεί γενικά να βοηθήσει στην εξαγωγή του επιφανειακού πεδίου ταχυτήτων
της ροής του νερού στο ποτάμι μέσω της παρακολούθησης της πορείας των
φερτών υλικών.



